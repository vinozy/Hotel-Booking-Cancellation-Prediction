{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import datetime as dt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_year</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>arrival_date_day_of_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>...</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>reservation_status_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>304.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>98.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119385</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>30</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>394.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>96.14</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119386</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>102</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>225.43</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119387</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>157.71</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119388</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>109</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>89.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>104.40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119389</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>205</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>151.20</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>119390 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               hotel  is_canceled  lead_time  arrival_date_year  \\\n",
       "0       Resort Hotel            0        342               2015   \n",
       "1       Resort Hotel            0        737               2015   \n",
       "2       Resort Hotel            0          7               2015   \n",
       "3       Resort Hotel            0         13               2015   \n",
       "4       Resort Hotel            0         14               2015   \n",
       "...              ...          ...        ...                ...   \n",
       "119385    City Hotel            0         23               2017   \n",
       "119386    City Hotel            0        102               2017   \n",
       "119387    City Hotel            0         34               2017   \n",
       "119388    City Hotel            0        109               2017   \n",
       "119389    City Hotel            0        205               2017   \n",
       "\n",
       "       arrival_date_month  arrival_date_week_number  \\\n",
       "0                    July                        27   \n",
       "1                    July                        27   \n",
       "2                    July                        27   \n",
       "3                    July                        27   \n",
       "4                    July                        27   \n",
       "...                   ...                       ...   \n",
       "119385             August                        35   \n",
       "119386             August                        35   \n",
       "119387             August                        35   \n",
       "119388             August                        35   \n",
       "119389             August                        35   \n",
       "\n",
       "        arrival_date_day_of_month  stays_in_weekend_nights  \\\n",
       "0                               1                        0   \n",
       "1                               1                        0   \n",
       "2                               1                        0   \n",
       "3                               1                        0   \n",
       "4                               1                        0   \n",
       "...                           ...                      ...   \n",
       "119385                         30                        2   \n",
       "119386                         31                        2   \n",
       "119387                         31                        2   \n",
       "119388                         31                        2   \n",
       "119389                         29                        2   \n",
       "\n",
       "        stays_in_week_nights  adults  ...  deposit_type  agent company  \\\n",
       "0                          0       2  ...    No Deposit    NaN     NaN   \n",
       "1                          0       2  ...    No Deposit    NaN     NaN   \n",
       "2                          1       1  ...    No Deposit    NaN     NaN   \n",
       "3                          1       1  ...    No Deposit  304.0     NaN   \n",
       "4                          2       2  ...    No Deposit  240.0     NaN   \n",
       "...                      ...     ...  ...           ...    ...     ...   \n",
       "119385                     5       2  ...    No Deposit  394.0     NaN   \n",
       "119386                     5       3  ...    No Deposit    9.0     NaN   \n",
       "119387                     5       2  ...    No Deposit    9.0     NaN   \n",
       "119388                     5       2  ...    No Deposit   89.0     NaN   \n",
       "119389                     7       2  ...    No Deposit    9.0     NaN   \n",
       "\n",
       "       days_in_waiting_list customer_type     adr  \\\n",
       "0                         0     Transient    0.00   \n",
       "1                         0     Transient    0.00   \n",
       "2                         0     Transient   75.00   \n",
       "3                         0     Transient   75.00   \n",
       "4                         0     Transient   98.00   \n",
       "...                     ...           ...     ...   \n",
       "119385                    0     Transient   96.14   \n",
       "119386                    0     Transient  225.43   \n",
       "119387                    0     Transient  157.71   \n",
       "119388                    0     Transient  104.40   \n",
       "119389                    0     Transient  151.20   \n",
       "\n",
       "        required_car_parking_spaces  total_of_special_requests  \\\n",
       "0                                 0                          0   \n",
       "1                                 0                          0   \n",
       "2                                 0                          0   \n",
       "3                                 0                          0   \n",
       "4                                 0                          1   \n",
       "...                             ...                        ...   \n",
       "119385                            0                          0   \n",
       "119386                            0                          2   \n",
       "119387                            0                          4   \n",
       "119388                            0                          0   \n",
       "119389                            0                          2   \n",
       "\n",
       "        reservation_status reservation_status_date  \n",
       "0                Check-Out              2015-07-01  \n",
       "1                Check-Out              2015-07-01  \n",
       "2                Check-Out              2015-07-02  \n",
       "3                Check-Out              2015-07-02  \n",
       "4                Check-Out              2015-07-03  \n",
       "...                    ...                     ...  \n",
       "119385           Check-Out              2017-09-06  \n",
       "119386           Check-Out              2017-09-07  \n",
       "119387           Check-Out              2017-09-07  \n",
       "119388           Check-Out              2017-09-07  \n",
       "119389           Check-Out              2017-09-07  \n",
       "\n",
       "[119390 rows x 32 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hotel = pd.read_csv('hotel_bookings.csv')\n",
    "hotel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_year</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>arrival_date_day_of_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>previous_cancellations</th>\n",
       "      <th>previous_bookings_not_canceled</th>\n",
       "      <th>booking_changes</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119386.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>103050.000000</td>\n",
       "      <td>6797.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "      <td>119390.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.370416</td>\n",
       "      <td>104.011416</td>\n",
       "      <td>2016.156554</td>\n",
       "      <td>27.165173</td>\n",
       "      <td>15.798241</td>\n",
       "      <td>0.927599</td>\n",
       "      <td>2.500302</td>\n",
       "      <td>1.856403</td>\n",
       "      <td>0.103890</td>\n",
       "      <td>0.007949</td>\n",
       "      <td>0.031912</td>\n",
       "      <td>0.087118</td>\n",
       "      <td>0.137097</td>\n",
       "      <td>0.221124</td>\n",
       "      <td>86.693382</td>\n",
       "      <td>189.266735</td>\n",
       "      <td>2.321149</td>\n",
       "      <td>101.831122</td>\n",
       "      <td>0.062518</td>\n",
       "      <td>0.571363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.482918</td>\n",
       "      <td>106.863097</td>\n",
       "      <td>0.707476</td>\n",
       "      <td>13.605138</td>\n",
       "      <td>8.780829</td>\n",
       "      <td>0.998613</td>\n",
       "      <td>1.908286</td>\n",
       "      <td>0.579261</td>\n",
       "      <td>0.398561</td>\n",
       "      <td>0.097436</td>\n",
       "      <td>0.175767</td>\n",
       "      <td>0.844336</td>\n",
       "      <td>1.497437</td>\n",
       "      <td>0.652306</td>\n",
       "      <td>110.774548</td>\n",
       "      <td>131.655015</td>\n",
       "      <td>17.594721</td>\n",
       "      <td>50.535790</td>\n",
       "      <td>0.245291</td>\n",
       "      <td>0.792798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-6.380000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>2016.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>69.290000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>2016.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>179.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>94.575000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>160.000000</td>\n",
       "      <td>2017.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>229.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>126.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>737.000000</td>\n",
       "      <td>2017.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>535.000000</td>\n",
       "      <td>543.000000</td>\n",
       "      <td>391.000000</td>\n",
       "      <td>5400.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         is_canceled      lead_time  arrival_date_year  \\\n",
       "count  119390.000000  119390.000000      119390.000000   \n",
       "mean        0.370416     104.011416        2016.156554   \n",
       "std         0.482918     106.863097           0.707476   \n",
       "min         0.000000       0.000000        2015.000000   \n",
       "25%         0.000000      18.000000        2016.000000   \n",
       "50%         0.000000      69.000000        2016.000000   \n",
       "75%         1.000000     160.000000        2017.000000   \n",
       "max         1.000000     737.000000        2017.000000   \n",
       "\n",
       "       arrival_date_week_number  arrival_date_day_of_month  \\\n",
       "count             119390.000000              119390.000000   \n",
       "mean                  27.165173                  15.798241   \n",
       "std                   13.605138                   8.780829   \n",
       "min                    1.000000                   1.000000   \n",
       "25%                   16.000000                   8.000000   \n",
       "50%                   28.000000                  16.000000   \n",
       "75%                   38.000000                  23.000000   \n",
       "max                   53.000000                  31.000000   \n",
       "\n",
       "       stays_in_weekend_nights  stays_in_week_nights         adults  \\\n",
       "count            119390.000000         119390.000000  119390.000000   \n",
       "mean                  0.927599              2.500302       1.856403   \n",
       "std                   0.998613              1.908286       0.579261   \n",
       "min                   0.000000              0.000000       0.000000   \n",
       "25%                   0.000000              1.000000       2.000000   \n",
       "50%                   1.000000              2.000000       2.000000   \n",
       "75%                   2.000000              3.000000       2.000000   \n",
       "max                  19.000000             50.000000      55.000000   \n",
       "\n",
       "            children         babies  is_repeated_guest  \\\n",
       "count  119386.000000  119390.000000      119390.000000   \n",
       "mean        0.103890       0.007949           0.031912   \n",
       "std         0.398561       0.097436           0.175767   \n",
       "min         0.000000       0.000000           0.000000   \n",
       "25%         0.000000       0.000000           0.000000   \n",
       "50%         0.000000       0.000000           0.000000   \n",
       "75%         0.000000       0.000000           0.000000   \n",
       "max        10.000000      10.000000           1.000000   \n",
       "\n",
       "       previous_cancellations  previous_bookings_not_canceled  \\\n",
       "count           119390.000000                   119390.000000   \n",
       "mean                 0.087118                        0.137097   \n",
       "std                  0.844336                        1.497437   \n",
       "min                  0.000000                        0.000000   \n",
       "25%                  0.000000                        0.000000   \n",
       "50%                  0.000000                        0.000000   \n",
       "75%                  0.000000                        0.000000   \n",
       "max                 26.000000                       72.000000   \n",
       "\n",
       "       booking_changes          agent      company  days_in_waiting_list  \\\n",
       "count    119390.000000  103050.000000  6797.000000         119390.000000   \n",
       "mean          0.221124      86.693382   189.266735              2.321149   \n",
       "std           0.652306     110.774548   131.655015             17.594721   \n",
       "min           0.000000       1.000000     6.000000              0.000000   \n",
       "25%           0.000000       9.000000    62.000000              0.000000   \n",
       "50%           0.000000      14.000000   179.000000              0.000000   \n",
       "75%           0.000000     229.000000   270.000000              0.000000   \n",
       "max          21.000000     535.000000   543.000000            391.000000   \n",
       "\n",
       "                 adr  required_car_parking_spaces  total_of_special_requests  \n",
       "count  119390.000000                119390.000000              119390.000000  \n",
       "mean      101.831122                     0.062518                   0.571363  \n",
       "std        50.535790                     0.245291                   0.792798  \n",
       "min        -6.380000                     0.000000                   0.000000  \n",
       "25%        69.290000                     0.000000                   0.000000  \n",
       "50%        94.575000                     0.000000                   0.000000  \n",
       "75%       126.000000                     0.000000                   1.000000  \n",
       "max      5400.000000                     8.000000                   5.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hotel.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 119390 entries, 0 to 119389\n",
      "Data columns (total 32 columns):\n",
      " #   Column                          Non-Null Count   Dtype  \n",
      "---  ------                          --------------   -----  \n",
      " 0   hotel                           119390 non-null  object \n",
      " 1   is_canceled                     119390 non-null  int64  \n",
      " 2   lead_time                       119390 non-null  int64  \n",
      " 3   arrival_date_year               119390 non-null  int64  \n",
      " 4   arrival_date_month              119390 non-null  object \n",
      " 5   arrival_date_week_number        119390 non-null  int64  \n",
      " 6   arrival_date_day_of_month       119390 non-null  int64  \n",
      " 7   stays_in_weekend_nights         119390 non-null  int64  \n",
      " 8   stays_in_week_nights            119390 non-null  int64  \n",
      " 9   adults                          119390 non-null  int64  \n",
      " 10  children                        119386 non-null  float64\n",
      " 11  babies                          119390 non-null  int64  \n",
      " 12  meal                            119390 non-null  object \n",
      " 13  country                         118902 non-null  object \n",
      " 14  market_segment                  119390 non-null  object \n",
      " 15  distribution_channel            119390 non-null  object \n",
      " 16  is_repeated_guest               119390 non-null  int64  \n",
      " 17  previous_cancellations          119390 non-null  int64  \n",
      " 18  previous_bookings_not_canceled  119390 non-null  int64  \n",
      " 19  reserved_room_type              119390 non-null  object \n",
      " 20  assigned_room_type              119390 non-null  object \n",
      " 21  booking_changes                 119390 non-null  int64  \n",
      " 22  deposit_type                    119390 non-null  object \n",
      " 23  agent                           103050 non-null  float64\n",
      " 24  company                         6797 non-null    float64\n",
      " 25  days_in_waiting_list            119390 non-null  int64  \n",
      " 26  customer_type                   119390 non-null  object \n",
      " 27  adr                             119390 non-null  float64\n",
      " 28  required_car_parking_spaces     119390 non-null  int64  \n",
      " 29  total_of_special_requests       119390 non-null  int64  \n",
      " 30  reservation_status              119390 non-null  object \n",
      " 31  reservation_status_date         119390 non-null  object \n",
      "dtypes: float64(4), int64(16), object(12)\n",
      "memory usage: 29.1+ MB\n"
     ]
    }
   ],
   "source": [
    "hotel.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "'company' has tons of missing values, over 94%. It suggests most of the bookings are for personal trips. Therefore, this variable is not useful at all.\n",
    "\n",
    "'agent' also has a lot of missing values.\n",
    "\n",
    "'company': ID of the company/entity that made the booking or responsible for paying the booking. ID is presented instead of designation for anonymity reasons."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop missing values\n",
    "hotel=hotel.drop(['company','agent'], axis = 1)\n",
    "hotel=hotel.dropna(axis = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 118898 entries, 0 to 119389\n",
      "Data columns (total 30 columns):\n",
      " #   Column                          Non-Null Count   Dtype  \n",
      "---  ------                          --------------   -----  \n",
      " 0   hotel                           118898 non-null  object \n",
      " 1   is_canceled                     118898 non-null  int64  \n",
      " 2   lead_time                       118898 non-null  int64  \n",
      " 3   arrival_date_year               118898 non-null  int64  \n",
      " 4   arrival_date_month              118898 non-null  object \n",
      " 5   arrival_date_week_number        118898 non-null  int64  \n",
      " 6   arrival_date_day_of_month       118898 non-null  int64  \n",
      " 7   stays_in_weekend_nights         118898 non-null  int64  \n",
      " 8   stays_in_week_nights            118898 non-null  int64  \n",
      " 9   adults                          118898 non-null  int64  \n",
      " 10  children                        118898 non-null  float64\n",
      " 11  babies                          118898 non-null  int64  \n",
      " 12  meal                            118898 non-null  object \n",
      " 13  country                         118898 non-null  object \n",
      " 14  market_segment                  118898 non-null  object \n",
      " 15  distribution_channel            118898 non-null  object \n",
      " 16  is_repeated_guest               118898 non-null  int64  \n",
      " 17  previous_cancellations          118898 non-null  int64  \n",
      " 18  previous_bookings_not_canceled  118898 non-null  int64  \n",
      " 19  reserved_room_type              118898 non-null  object \n",
      " 20  assigned_room_type              118898 non-null  object \n",
      " 21  booking_changes                 118898 non-null  int64  \n",
      " 22  deposit_type                    118898 non-null  object \n",
      " 23  days_in_waiting_list            118898 non-null  int64  \n",
      " 24  customer_type                   118898 non-null  object \n",
      " 25  adr                             118898 non-null  float64\n",
      " 26  required_car_parking_spaces     118898 non-null  int64  \n",
      " 27  total_of_special_requests       118898 non-null  int64  \n",
      " 28  reservation_status              118898 non-null  object \n",
      " 29  reservation_status_date         118898 non-null  object \n",
      "dtypes: float64(2), int64(16), object(12)\n",
      "memory usage: 28.1+ MB\n"
     ]
    }
   ],
   "source": [
    "hotel.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        2015-07-01\n",
       "1        2015-07-01\n",
       "2        2015-07-01\n",
       "3        2015-07-01\n",
       "4        2015-07-01\n",
       "            ...    \n",
       "119385   2017-08-30\n",
       "119386   2017-08-31\n",
       "119387   2017-08-31\n",
       "119388   2017-08-31\n",
       "119389   2017-08-29\n",
       "Name: arrival_date, Length: 118898, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hotel['arrival_date_year'] = hotel['arrival_date_year'].astype('str')\n",
    "hotel['arrival_date_month'] = hotel['arrival_date_month'].astype('str')\n",
    "hotel['arrival_date_day_of_month'] = hotel['arrival_date_day_of_month'].astype('str')\n",
    "hotel['arrival_date'] = hotel['arrival_date_day_of_month'] + '-' + hotel['arrival_date_month'] + '-' + hotel['arrival_date_year']\n",
    "hotel['arrival_date'] = pd.to_datetime(hotel['arrival_date'], errors='coerce')\n",
    "hotel['arrival_date']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1      5874\n",
       "2      8012\n",
       "3      9739\n",
       "4     11045\n",
       "5     11779\n",
       "6     10927\n",
       "7     12628\n",
       "8     13852\n",
       "9     10467\n",
       "10    11095\n",
       "11     6752\n",
       "12     6728\n",
       "Name: arrival_month, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hotel['arrival_month'] = hotel['arrival_date'].dt.month\n",
    "hotel.arrival_month.value_counts().sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(13,10))\n",
    "plt.title('Market Segments by Cancelation')\n",
    "sns.countplot(x = \"market_segment\", hue = 'is_canceled', data = hotel)\n",
    "plt.savefig('Segments.jpg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(13,10))\n",
    "plt.title('Deposit Types by Cancelation')\n",
    "sns.countplot(x = \"deposit_type\", hue = 'is_canceled', data = hotel)\n",
    "plt.savefig('Deposit Types.jpg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(13,10))\n",
    "plt.title('Total Monthly Arrivals')\n",
    "sns.countplot(x='arrival_month', data = hotel, color='steelblue')\n",
    "plt.savefig('Total Monthly Arrivals.jpg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(13,10))\n",
    "plt.title('Canceled/Not Canceled Per Month')\n",
    "sns.countplot(x='arrival_month', hue='is_canceled', data = hotel)\n",
    "plt.savefig('Canceled_Not Canceled.jpg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2e4c83d0>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAfMAAAF4CAYAAABAeBBQAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAdDklEQVR4nO3dfZRddX3v8fdHIlbk0ZJSmqDBGq1oW0tToMvb1isWArga2lIXaCVabG6vWL19Dtq1WFcvbehtS6VWeqlEg1UQ0QotWEhF6rW3IOGhPEpJeUwuD9HwoGLV4Pf+cX65PQwzzDgz5Mwv836tddbs/d2/vff3DEM+Z//OnjOpKiRJUr+eNeoGJEnSzBjmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzaZ5IUklePMG2Nyf5wo7uaUwPX0vyolk4zoTPU9pZGebSDpbk7iTfSrLvmPr1LYiWzMI5rkzy1pke57s4X5LcmeTW6R6jqnavqjtnsy9pvjDMpdG4Czhh+0qSHwZ2G107M/bTwPcBL0ryExMNaqH/rDG1Bc90c9LOzjCXRuMjwIlD6yuBc4cHJNkryblJtiS5J8nvbw/C7dPiSf44ycNJ7kpyVNt2GvBTwPvb1PX7hw772iR3JHkkyV8kydjGWv1PxtQuTvIbT/N8VgIXAZe25eF9r0xyWpJ/Ah5nEPiV5OQkdwB3tHGV5MVJDk3yQJJdho7x80lubMuHJPnn9hzuT/L+JLuO11SSo5PcmuSrSTYn+e2neQ5StwxzaTSuAvZM8rIWWscDfz1mzJ8DewEvAn6GQfi/ZWj7ocDtwL7AHwHnJElVvRv438Db29T124f2eR3wE8CPAK8Hjhynt3XACUMvHPYFXgt8bLwnkmQ34Djgo+1x/Djh+iZgFbAHcE+rHduew0HDA6vqauDrwGuGym8YOv8TwG+05/2TwOHA28brDTgH+C9VtQfwCuCKCcZJXTPMpdHZfnX+s8BtwObtG4YC/pSq+mpV3Q38CYNQ3O6eqvqrqnqCQQDvD+w3yTnXVNUjVXUv8DnglWMHVNUXgUcZhCStjyur6sEJjvkLwDeBy4FLgGcDx4wZ8+GquqWqtlXVt1vtD6tqa1V9Y5xjnkd7GyLJHsDRrUZVXVtVV7Vj3Q38LwYvdsbzbeCgJHtW1cNVdd0E46SuGebS6HyEwRXnmxkzxc7gqvPZ/MdVLG150dD6A9sXqurxtrj7JOd8YGj58acZvw745bb8y63XiawELmjh+u/AJxkz1Q7cN85+49W2+xjwC0mew+DFwnVVdQ9Akpck+bs2Ff8Y8AcMvl/j+UUGLwTuSfKPSX7yac4pdcswl0akhdNdDMLmU2M2f5nBVeULh2ovYOjqfbLDz7C9vwZWJPlR4GXAp8cblGQxg+nwX27h+gCDKfejx9ytP14/E/ZYVbcyePFyFE+eYgc4C/gSsLSq9gTeBTzlvf92nGuqagWDm/M+DVww0Tmlnhnm0midBLymqr4+XGxT5xcApyXZI8kLgd/kqe+rT+RBBu+1T0tVbQKuYXBF/skJpsJhMO3/r8BLGUzZvxJ4CbCJobv1p+ljwDsZ3Cn/iaH6HsBjwNeS/BDwX8fbOcmuSd6YZK82tf8Y8J0Z9iTNSYa5NEJV9W9VtWGCzb/O4EawO4EvMAi3tVM89PuA49qd7mdOs711wA8z+RT7B6rqgeEH8Jc8dar9u3Ueg/fCr6iqLw/Vf5vB1fpXgb8CPv40x3gTcHebjv814I0z7Emak1I109k4STujJD/NYCbgheU/FNKc5pW5pKdI8mwGU9wfNMiluc8wl/QkSV4GPMLgV93+bMTtSJoCp9klSeqcV+aSJHXOMJckqXPd/rWifffdt5YsWTLqNiRJ2iGuvfbaL1fVwvG2dRvmS5YsYcOGiX49V5KknUuSeyba5jS7JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOTRrmSdYmeSjJzeNs+60klWTftp4kZybZmOTGJAcPjV2Z5I72WDlU//EkN7V9zkyS2XpykiTNB1O5Mv8wsHxsMckBwBHAvUPlo4Cl7bEKOKuNfT5wKnAocAhwapJ92j5nAb86tN9TziVJkiY2aZhX1eeBreNsOgP4XWD4L7WsAM6tgauAvZPsDxwJrK+qrVX1MLAeWN627VlVV7U/s3gucOzMnpIkSfPLtN4zT7IC2FxV/zJm0yLgvqH1Ta32dPVN49QlSdIUfdcf55pkN+BdDKbYd6gkqxhM3/OCF7xgR59ekqQ5aTpX5j8IHAj8S5K7gcXAdUm+H9gMHDA0dnGrPV198Tj1cVXV2VW1rKqWLVw47mfNS5I073zXYV5VN1XV91XVkqpawmBq/OCqegC4GDix3dV+GPBoVd0PXAYckWSfduPbEcBlbdtjSQ5rd7GfCFw0S89NkqR5YdJp9iTnAa8G9k2yCTi1qs6ZYPilwNHARuBx4C0AVbU1yXuBa9q491TV9pvq3sbgjvnnAp9pD0maVUtWXzJrx7p7zTGzdixpNkwa5lV1wiTblwwtF3DyBOPWAmvHqW8AXjFZH5IkaXx+ApwkSZ0zzCVJ6pxhLklS5wxzSZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6tyCUTcgaeezZPUls3asu9ccM2vHknZWXplLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUuUnDPMnaJA8luXmo9j+TfCnJjUn+JsneQ9tOSbIxye1JjhyqL2+1jUlWD9UPTHJ1q388ya6z+QQlSdrZTeXK/MPA8jG19cArqupHgH8FTgFIchBwPPDyts8HkuySZBfgL4CjgIOAE9pYgNOBM6rqxcDDwEkzekaSJM0zk4Z5VX0e2DqmdnlVbWurVwGL2/IK4Pyq+mZV3QVsBA5pj41VdWdVfQs4H1iRJMBrgAvb/uuAY2f4nCRJmldm4z3zXwE+05YXAfcNbdvUahPVvxd4ZOiFwfa6JEmaohmFeZJ3A9uAj85OO5Oeb1WSDUk2bNmyZUecUpKkOW/aYZ7kzcDrgDdWVbXyZuCAoWGLW22i+leAvZMsGFMfV1WdXVXLqmrZwoULp9u6JEk7lWmFeZLlwO8CP1dVjw9tuhg4PslzkhwILAW+CFwDLG13ru/K4Ca5i9uLgM8Bx7X9VwIXTe+pSJI0P03lV9POA/4ZeGmSTUlOAt4P7AGsT3JDkr8EqKpbgAuAW4G/B06uqifae+JvBy4DbgMuaGMBfg/4zSQbGbyHfs6sPkNJknZyCyYbUFUnjFOeMHCr6jTgtHHqlwKXjlO/k8Hd7pIkaRomDXNJ/2HJ6ktm5Th3rzlmVo4jSeDHuUqS1D3DXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzSZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcfwJVkvQk/qnf/hjmmrP8B0WSpsZpdkmSOmeYS5LUOafZpc7N1tsR4FsSUq+8MpckqXOGuSRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzhnmkiR1zjCXJKlzfgKcJI2Qf1BIs8Erc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnZs0zJOsTfJQkpuHas9Psj7JHe3rPq2eJGcm2ZjkxiQHD+2zso2/I8nKofqPJ7mp7XNmksz2k5QkaWc2lSvzDwPLx9RWA5+tqqXAZ9s6wFHA0vZYBZwFg/AHTgUOBQ4BTt3+AqCN+dWh/caeS5IkPY1Jw7yqPg9sHVNeAaxry+uAY4fq59bAVcDeSfYHjgTWV9XWqnoYWA8sb9v2rKqrqqqAc4eOJUmSpmC675nvV1X3t+UHgP3a8iLgvqFxm1rt6eqbxqlLkqQpmvENcO2Kumahl0klWZVkQ5INW7Zs2RGnlCRpzptumD/YpshpXx9q9c3AAUPjFrfa09UXj1MfV1WdXVXLqmrZwoULp9m6JEk7l+mG+cXA9jvSVwIXDdVPbHe1HwY82qbjLwOOSLJPu/HtCOCytu2xJIe1u9hPHDqWJEmagkn/alqS84BXA/sm2cTgrvQ1wAVJTgLuAV7fhl8KHA1sBB4H3gJQVVuTvBe4po17T1Vtv6nubQzumH8u8Jn2kCRJUzRpmFfVCRNsOnycsQWcPMFx1gJrx6lvAF4xWR+SJGl8fgKcJEmdm/TKXDu/JasvmbVj3b3mmFk7liRparwylySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzSZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnZtRmCf5jSS3JLk5yXlJvifJgUmuTrIxyceT7NrGPqetb2zblwwd55RWvz3JkTN7SpIkzS/TDvMki4B3AMuq6hXALsDxwOnAGVX1YuBh4KS2y0nAw61+RhtHkoPafi8HlgMfSLLLdPuSJGm+mek0+wLguUkWALsB9wOvAS5s29cBx7blFW2dtv3wJGn186vqm1V1F7AROGSGfUmSNG8smO6OVbU5yR8D9wLfAC4HrgUeqaptbdgmYFFbXgTc1/bdluRR4Htb/aqhQw/vs9NZsvqSWTvW3WuOmbVjSZL6NZNp9n0YXFUfCPwA8DwG0+TPmCSrkmxIsmHLli3P5KkkSerGTKbZXwvcVVVbqurbwKeAVwF7t2l3gMXA5ra8GTgAoG3fC/jKcH2cfZ6kqs6uqmVVtWzhwoUzaF2SpJ3HTML8XuCwJLu1974PB24FPgcc18asBC5qyxe3ddr2K6qqWv34drf7gcBS4Isz6EuSpHllJu+ZX53kQuA6YBtwPXA2cAlwfpL/0WrntF3OAT6SZCOwlcEd7FTVLUkuYPBCYBtwclU9Md2+JEmab6Yd5gBVdSpw6pjynYxzN3pV/TvwSxMc5zTgtJn0IknSfOUnwEmS1DnDXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzSZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnTPMJUnqnGEuSVLnFoy6AUmSJrNk9SWzdqy71xwzK8eZSz15ZS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzs0ozJPsneTCJF9KcluSn0zy/CTrk9zRvu7TxibJmUk2JrkxycFDx1nZxt+RZOVMn5QkSfPJTK/M3wf8fVX9EPCjwG3AauCzVbUU+GxbBzgKWNoeq4CzAJI8HzgVOBQ4BDh1+wsASZI0uWmHeZK9gJ8GzgGoqm9V1SPACmBdG7YOOLYtrwDOrYGrgL2T7A8cCayvqq1V9TCwHlg+3b4kSZpvZnJlfiCwBfhQkuuTfDDJ84D9qur+NuYBYL+2vAi4b2j/Ta02UV2SJE3BTMJ8AXAwcFZV/Rjwdf5jSh2AqiqgZnCOJ0myKsmGJBu2bNkyW4eVJKlrMwnzTcCmqrq6rV/IINwfbNPntK8Pte2bgQOG9l/cahPVn6Kqzq6qZVW1bOHChTNoXZKknceC6e5YVQ8kuS/JS6vqduBw4Nb2WAmsaV8vartcDLw9yfkMbnZ7tKruT3IZ8AdDN70dAZwy3b6GLVl9yWwcBoC71xwza8eSJGk2TTvMm18HPppkV+BO4C0MrvYvSHIScA/w+jb2UuBoYCPweBtLVW1N8l7gmjbuPVW1dYZ9SZI0b8wozKvqBmDZOJsOH2dsASdPcJy1wNqZ9CJJ0nzlJ8BJktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzSZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXMzDvMkuyS5PsnftfUDk1ydZGOSjyfZtdWf09Y3tu1Lho5xSqvfnuTImfYkSdJ8MhtX5u8EbhtaPx04o6peDDwMnNTqJwEPt/oZbRxJDgKOB14OLAc+kGSXWehLkqR5YUZhnmQxcAzwwbYe4DXAhW3IOuDYtryirdO2H97GrwDOr6pvVtVdwEbgkJn0JUnSfDLTK/M/A34X+E5b/17gkara1tY3AYva8iLgPoC2/dE2/v/Xx9nnSZKsSrIhyYYtW7bMsHVJknYO0w7zJK8DHqqqa2exn6dVVWdX1bKqWrZw4cIddVpJkua0BTPY91XAzyU5GvgeYE/gfcDeSRa0q+/FwOY2fjNwALApyQJgL+ArQ/XthveRJEmTmPaVeVWdUlWLq2oJgxvYrqiqNwKfA45rw1YCF7Xli9s6bfsVVVWtfny72/1AYCnwxen2JUnSfDOTK/OJ/B5wfpL/AVwPnNPq5wAfSbIR2MrgBQBVdUuSC4BbgW3AyVX1xDPQlyRJO6VZCfOquhK4si3fyTh3o1fVvwO/NMH+pwGnzUYvkiTNN34CnCRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzSZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzSZI6N+0wT3JAks8luTXJLUne2erPT7I+yR3t6z6tniRnJtmY5MYkBw8da2Ubf0eSlTN/WpIkzR8zuTLfBvxWVR0EHAacnOQgYDXw2apaCny2rQMcBSxtj1XAWTAIf+BU4FDgEODU7S8AJEnS5KYd5lV1f1Vd15a/CtwGLAJWAOvasHXAsW15BXBuDVwF7J1kf+BIYH1Vba2qh4H1wPLp9iVJ0nwzK++ZJ1kC/BhwNbBfVd3fNj0A7NeWFwH3De22qdUmqo93nlVJNiTZsGXLltloXZKk7s04zJPsDnwS+G9V9djwtqoqoGZ6jqHjnV1Vy6pq2cKFC2frsJIkdW1GYZ7k2QyC/KNV9alWfrBNn9O+PtTqm4EDhnZf3GoT1SVJ0hTM5G72AOcAt1XVnw5tuhjYfkf6SuCiofqJ7a72w4BH23T8ZcARSfZpN74d0WqSJGkKFsxg31cBbwJuSnJDq70LWANckOQk4B7g9W3bpcDRwEbgceAtAFW1Ncl7gWvauPdU1dYZ9CVJ0rwy7TCvqi8AmWDz4eOML+DkCY61Flg73V4kSZrP/AQ4SZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOGeaSJHXOMJckqXOGuSRJnTPMJUnqnGEuSVLnDHNJkjpnmEuS1DnDXJKkzhnmkiR1zjCXJKlzhrkkSZ0zzCVJ6pxhLklS5wxzSZI6Z5hLktQ5w1ySpM4Z5pIkdc4wlySpc4a5JEmdM8wlSeqcYS5JUucMc0mSOmeYS5LUOcNckqTOzZkwT7I8ye1JNiZZPep+JEnqxZwI8yS7AH8BHAUcBJyQ5KDRdiVJUh/mRJgDhwAbq+rOqvoWcD6wYsQ9SZLUhbkS5ouA+4bWN7WaJEmaRKpq1D2Q5DhgeVW9ta2/CTi0qt4+ZtwqYFVbfSlw+yycfl/gy7NwnNk2F/uyp6mxp6mbi33Z09TY09TMZk8vrKqF421YMEsnmKnNwAFD64tb7Umq6mzg7Nk8cZINVbVsNo85G+ZiX/Y0NfY0dXOxL3uaGnuamh3V01yZZr8GWJrkwCS7AscDF4+4J0mSujAnrsyraluStwOXAbsAa6vqlhG3JUlSF+ZEmANU1aXApSM49axO28+iudiXPU2NPU3dXOzLnqbGnqZmh/Q0J26AkyRJ0zdX3jOXJEnTZJhLktQ5w1ySpM4Z5nNAkh9KcniS3cfUl4+wp0OS/ERbPijJbyY5elT9jCfJuaPuYawk/6l9r44YYQ+HJtmzLT83yX9P8rdJTk+y14h6ekeSAyYfueMk2TXJiUle29bfkOT9SU5O8uwR9/aiJL+d5H1J/jTJr23/byqNxxvgmiRvqaoPjeC87wBOBm4DXgm8s6ouatuuq6qDR9DTqQz+6M0CYD1wKPA54GeBy6rqtBH0NPZzBwL8Z+AKgKr6uR3dE0CSL1bVIW35Vxn8t/wb4Ajgb6tqzQh6ugX40fYrn2cDjwMXAoe3+i+MoKdHga8D/wacB3yiqrbs6D7G9PRRBj/juwGPALsDn2LwfUpVrRxRX+8AXgd8HjgauL719/PA26rqylH0pTmuqnwMXtDcO6Lz3gTs3paXABsYBDrA9SPsaRcG/8g9BuzZ6s8FbhxRT9cBfw28GviZ9vX+tvwzI/y5uX5o+RpgYVt+HnDTiHq6bfj7NmbbDaP6PjGYCTwCOAfYAvw9sBLYY0Q93di+LgAeBHZp6xnVz3k7/01DvewGXNmWXzDCfxP2AtYAXwK2Al9hcAGyBth7VN+rp+n3MyM8957AHwIfAd4wZtsHnqnzzpnfM98Rktw40SZgvx3Zy5BnVdXXAKrq7iSvBi5M8sLW1yhsq6ongMeT/FtVPdb6+0aS74yop2XAO4F3A79TVTck+UZV/eOI+tnuWUn2YRBUqXa1WVVfT7JtRD3dPDTT9C9JllXVhiQvAb49op6qqr4DXA5c3qaxjwJOAP4YGPfzpp9hz2qfOPk8BqG5F4Ogeg4w0ml2Bi8wnmi97A5QVfeOcPr/AgazYK+uqgcAknw/gxdjFzB4kbZDJZlo1jIMZjlH5UPAHcAngV9J8osMQv2bwGHP1EnnVZgzCOwjgYfH1AP8nx3fDgAPJnllVd0AUFVfS/I6YC3wwyPq6VtJdquqx4Ef315s77eOJMxbEJyR5BPt64PMjZ/fvYBrGfwMVZL9q+r+dv/DqF6MvRV4X5LfZ/AHHv45yX0M/jLhW0fU05O+F1X1bQYf2Xxxkt1G0xLnMLjS3IXBi8RPJLmTwT+454+oJ4APAtckuRr4KeB0gCQLGbzYGIUlVXX6cKGF+ulJfmVEPV0D/CPj/3+29w7uZdgPVtUvtuVPJ3k3cEWSZ/StwHn1nnmSc4APVdUXxtn2sap6wwh6WszgSviBcba9qqr+aQQ9Pae9ihxb3xfYv6pu2tE9jdPLMcCrqupdo+5lPC2g9ququ0bYw57AgQxe9GyqqgdH2MtLqupfR3X+iST5AYCq+r9J9gZey+Atty+OuK+XAy8Dbq6qL42yl9bP5cA/AOu2/xwl2Q94M/CzVfXaEfR0M/DzVXXHONvuq6qR3HCZ5Dbg5e0CZHvtzcDvMHhL9YXPyHnnU5hLkr577a2k1cAK4Pta+UEGsytrqmrsbOeO6Ok4BvelPOVPYSc5tqo+vaN7auf+I+DyqvqHMfXlwJ9X1dJn5LyGuSRpukb1m0BPZy72BM9sX4a5JGnaktxbVS8YdR/D5mJP8Mz2NRduIJIkzWFz8TeB5mJPMLq+DHNJ0mTm4m8CzcWeYER9GeaSpMn8HYM7sW8YuyHJlTu+HWBu9gQj6sv3zCVJ6px/aEWSpM4Z5pIkdc4wlySpc4a5JEmdM8wlSerc/wMVTg26Ng0j/wAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hotel.arrival_month.value_counts().sort_index().plot.bar(title='Monthly Arrivals',figsize=(8,6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_year</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>arrival_date_day_of_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>...</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>reservation_status_date</th>\n",
       "      <th>arrival_date</th>\n",
       "      <th>arrival_month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>98.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-03</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          hotel  is_canceled  lead_time arrival_date_year arrival_date_month  \\\n",
       "0  Resort Hotel            0        342              2015               July   \n",
       "1  Resort Hotel            0        737              2015               July   \n",
       "2  Resort Hotel            0          7              2015               July   \n",
       "3  Resort Hotel            0         13              2015               July   \n",
       "4  Resort Hotel            0         14              2015               July   \n",
       "\n",
       "   arrival_date_week_number arrival_date_day_of_month  \\\n",
       "0                        27                         1   \n",
       "1                        27                         1   \n",
       "2                        27                         1   \n",
       "3                        27                         1   \n",
       "4                        27                         1   \n",
       "\n",
       "   stays_in_weekend_nights  stays_in_week_nights  adults  ...  deposit_type  \\\n",
       "0                        0                     0       2  ...    No Deposit   \n",
       "1                        0                     0       2  ...    No Deposit   \n",
       "2                        0                     1       1  ...    No Deposit   \n",
       "3                        0                     1       1  ...    No Deposit   \n",
       "4                        0                     2       2  ...    No Deposit   \n",
       "\n",
       "   days_in_waiting_list customer_type   adr required_car_parking_spaces  \\\n",
       "0                     0     Transient   0.0                           0   \n",
       "1                     0     Transient   0.0                           0   \n",
       "2                     0     Transient  75.0                           0   \n",
       "3                     0     Transient  75.0                           0   \n",
       "4                     0     Transient  98.0                           0   \n",
       "\n",
       "  total_of_special_requests  reservation_status  reservation_status_date  \\\n",
       "0                         0           Check-Out               2015-07-01   \n",
       "1                         0           Check-Out               2015-07-01   \n",
       "2                         0           Check-Out               2015-07-02   \n",
       "3                         0           Check-Out               2015-07-02   \n",
       "4                         1           Check-Out               2015-07-03   \n",
       "\n",
       "   arrival_date arrival_month  \n",
       "0    2015-07-01             7  \n",
       "1    2015-07-01             7  \n",
       "2    2015-07-01             7  \n",
       "3    2015-07-01             7  \n",
       "4    2015-07-01             7  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hotel.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5234"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum((hotel['is_canceled']==1)[hotel['arrival_month']==8])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12628"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(hotel['arrival_month']==7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(range(1,13))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.30745658835546474,\n",
       " 0.3363704443334998,\n",
       " 0.3232364719170346,\n",
       " 0.4085106382978723,\n",
       " 0.3970625689786909,\n",
       " 0.41493548091882493,\n",
       " 0.3750395945517897,\n",
       " 0.3778515737799596,\n",
       " 0.3917072704690933,\n",
       " 0.3810725552050473,\n",
       " 0.31398104265402843,\n",
       " 0.3512187871581451]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Cancellation Rate for each month\n",
    "month=list(range(12))\n",
    "for i in range(1,13):\n",
    "    month[i-1]=sum((hotel['is_canceled']==1)[hotel['arrival_month']==i])/sum(hotel['arrival_month']==i)\n",
    "month\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([30.74565884, 33.63704443, 32.32364719, 40.85106383, 39.7062569 ,\n",
       "       41.49354809, 37.50395946, 37.78515738, 39.17072705, 38.10725552,\n",
       "       31.39810427, 35.12187872])"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "canc_rate_monthly = np.array(month)\n",
    "canc_rate_monthly*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "m=list(range(1,13))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a222fde90>]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(m,month)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Summer is the peak season."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a25062050>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hotel.groupby(['arrival_month','is_canceled']).size().unstack().plot(kind = 'bar',figsize=(8,6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>is_canceled</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>arrival_month</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4068</td>\n",
       "      <td>1806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5317</td>\n",
       "      <td>2695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6591</td>\n",
       "      <td>3148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6533</td>\n",
       "      <td>4512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>7102</td>\n",
       "      <td>4677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6393</td>\n",
       "      <td>4534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7892</td>\n",
       "      <td>4736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8618</td>\n",
       "      <td>5234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>6367</td>\n",
       "      <td>4100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>6867</td>\n",
       "      <td>4228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4632</td>\n",
       "      <td>2120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4365</td>\n",
       "      <td>2363</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "is_canceled       0     1\n",
       "arrival_month            \n",
       "1              4068  1806\n",
       "2              5317  2695\n",
       "3              6591  3148\n",
       "4              6533  4512\n",
       "5              7102  4677\n",
       "6              6393  4534\n",
       "7              7892  4736\n",
       "8              8618  5234\n",
       "9              6367  4100\n",
       "10             6867  4228\n",
       "11             4632  2120\n",
       "12             4365  2363"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hotel.groupby(['arrival_month','is_canceled']).size().unstack()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Totel Type: City v.s. Resort Hotels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a201c5b50>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hotel.groupby(['hotel','is_canceled']).size().unstack().plot(kind = 'bar',figsize=(8,6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 1440x1440 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "hotel.groupby(['deposit_type'])['is_canceled'].size().plot.pie()\n",
    "plt.figure(figsize =(20,20))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Distributio Channel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a20321150>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hotel.groupby(['distribution_channel','is_canceled']).size().unstack().plot(kind = 'bar',figsize=(8,6))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Booking through TA/TO are much more likely to cancel. It makes sense to me personally, because usually online Travel Agents like Expedia/Booking.com are easier to bargaining for free cancellations for hotel rooms in my past experiences. Maybe because they have a much larger customer base, since we can check almost all the hotels through TAs.\n",
    "\n",
    "In comparison, it is much more stricter when explaining directly to the corporate office of a hotel if unpredictables things happened and I need to cancel the reservation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Room Type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a1e169dd0>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "reserved_room_type = hotel.groupby(['reserved_room_type','is_canceled'])\n",
    "reserved_room_type.size().unstack().plot(kind='bar',title=\"Reserved Room Type\",figsize=(8,6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a1e1f5110>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "assigned_room_type = hotel.groupby(['assigned_room_type','is_canceled'])\n",
    "assigned_room_type.size().unstack().plot(kind='bar',title=\"Assigned Room Type\",figsize=(8,6))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Room type A and D are two room types that really matters.\n",
    "\n",
    "By looking at the bar plot, I guess Room A is the most general or the economy room type, and a small portion of the Reserved Room A customers got to upgraded into other room types. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
